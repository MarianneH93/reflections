How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Because any bug that did not exist in the old version must have been created
    in the recent edits.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    If you know when bugs were introduced you can narrow down the causes to the
    changes since that time. If a new version has too many problems it can reverted
    and started from scratch.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Git: Versions can be committed when a particular module is completed but
    it relies on human intervention and humans can forget or be lazy.
    Google: There will always be something saved but it may not have significant
    changes from the previous version or a module may be partly completed.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is designed for programming which often involves multiple files.
    Google Docs is more general purpose, for documents, spreadsheets and
    slideshows.

How can you use the commands git log and git diff to view the history of files?

    Use git log to find a summary of all the different commits with
    their IDs and notes visible.  Git diff uses those IDs (or other
    labels) to display the differences between two different versions.
    'git log --stat' shows a bit more information.

How might using version control make you more confident to make changes that
could break something?

    Changes will be easy to revert.

Now that you have your workspace set up, what do you want to try using Git for?

    My scheduler on Android.